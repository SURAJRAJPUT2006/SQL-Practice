SELECT * FROM customers;
SELECT * FROM orders;
SELECT * FROM products;
SELECT * FROM order_details;
--===========================================================================================================================================================================================
--Q1. List the top 5 customers by total purchase amount.
--===========================================================================================================================================================================================
SELECT o.customer_id ,c.customer_name,c.city,c.segment,c.join_date,c.email,c.phone, total_amount FROM orders o
JOIN customers c 
ON c.customer_id = o.customer_id
order by total_amount DESC
LIMIT 5;
--===========================================================================================================================================================================================
--Q2. Show orders where total amount is above the average for all orders (using subquery).
--===========================================================================================================================================================================================
select * from orders
where total_amount> (SELECT avg(total_amount) from orders)
order by total_amount;
--===========================================================================================================================================================================================
--Q3. Calculate the average order value by segment for customers in New York.
--===========================================================================================================================================================================================
SELECT c.segment , avg(o.total_amount) from customers c
join orders o 
on o.customer_id=c.customer_id
where c.city='New York'
group by c.segment;
--===========================================================================================================================================================================================
--Q4. Total revenue generated by each product category.
--===========================================================================================================================================================================================
SELECT p.category ,SUM(od.price_each * od.quantity) as revenue FROM order_details od
JOIN products p
ON p.product_id=od.product_id
GROUP BY p.category;
--===========================================================================================================================================================================================
--Q5. List customers who ordered more than 4 units of any product.
--===========================================================================================================================================================================================
SELECT  c.customer_id,o.product_id FROM order_details o
JOIN orders c
ON c.order_id = o.order_id
WHERE o.quantity>=4
GROUP BY o.product_id,c.customer_id ;
--===========================================================================================================================================================================================
--Q6. Find products that were never ordered.
--===========================================================================================================================================================================================
SELECT p.product_id, p.product_name, p.category
FROM products p
LEFT JOIN order_details od ON p.product_id = od.product_id
WHERE od.product_id IS NULL;
--===========================================================================================================================================================================================
--Q7. Show the monthly sales count and revenue for the year 2025
--===========================================================================================================================================================================================
SELECT month(o.order_date) as month, year(o.order_date) as year , sum(od.price_each * od.quantity)
FROM order_details od
JOIN orders o 
ON o.order_id= od.order_id
GROUP BY month(o.order_date) ,year(o.order_date)
ORDER BY year, month ;
--===========================================================================================================================================================================================
--Q8. Find the average shipping duration (in days) for each product category, and display the product name and category.
--===========================================================================================================================================================================================
SELECT  p.category ,AVG(Abs( Datediff(o.order_date, o.ship_date))) as avg_shippin_dur FROM orders o
JOIN order_details od 
ON od.order_id=o.order_id
JOIN products p 
ON p.product_id = od.product_id
GROUP BY p.category;
--===========================================================================================================================================================================================
--Q9. List the top 3 customers by total amount spent.
--===========================================================================================================================================================================================
SELECT c.customer_id,sum(od.total_amount) as total_amount_spent FROM orders od
JOIN customers c
ON c.customer_id= od.customer_id
GROUP BY c.customer_id
ORDER BY sum(od.total_amount) desc
LIMIT 3;
--===========================================================================================================================================================================================
--Q10. List all orders that resulted in cancellations along with customer and product details.
--===========================================================================================================================================================================================
SELECT o.order_id,o.status,c.customer_id,c.customer_name,p.product_id,p.product_name,p.category, od.product_id FROM orders o 
JOIN order_details od
ON o.order_id= od.order_id
JOIN products p 
ON p.product_id= od.product_id
JOIN customers c
ON c.customer_id = o.customer_id
WHERE o.status='Cancelled';
--===========================================================================================================================================================================================
--Q11. Show products ranked by number of orders they appear in (most popular products).  
--===========================================================================================================================================================================================
SELECT od.product_id,p.product_name,COUNT(od.quantity) FROM order_details od
JOIN products p
ON p.product_id= od.product_id
GROUP BY od.product_id, p.product_name
ORDER BY COUNT(od.quantity) DESC ;
--===========================================================================================================================================================================================
--QList all customers who joined after the year 2022 ,along with their order details (product and quantity).
--===========================================================================================================================================================================================
SELECT c.customer_id, c.customer_name , c.join_date , od.product_id , p.product_name, od.quantity FROM customers c 
JOIN orders o 
ON o.customer_id =c.customer_id
JOIN order_details od 
ON od.order_id = o.order_id
JOIN products p
ON od.product_id = p.product_id
WHERE year(c.join_date)>2022;
--===========================================================================================================================================================================================
--Q13. List products and the total quantities ordered in Chicago city.
--===========================================================================================================================================================================================
SELECT od.product_id , p.product_name , SUM(od.quantity) , c.city FROM order_details od
JOIN products p
ON p.product_id = od.product_id
JOIN orders o
ON o.order_id = od.order_id
JOIN customers c
ON c.customer_id= o.customer_id
WHERE c.city ='Chicago'
GROUP BY od.product_id , p.product_name, c.city;
--===========================================================================================================================================================================================
--Q14. Display all orders with their customerâ€™s city and segment, including product names.
--===========================================================================================================================================================================================
SELECT o.order_id, c.city, c.segment,  p.product_name 
FROM order_details od
JOIN orders o
ON o.order_id = od.order_id
JOIN products p 
ON od.product_id = p.product_id
JOIN customers c
ON c.customer_id = o.customer_id;   
--===========================================================================================================================================================================================
--Q15. Show the average, minimum, and maximum quantity of products ordered across all orders, and provide the breakdown by city.
--===========================================================================================================================================================================================
SELECT c.city,AVG(od.quantity) AS avg_quantity,MIN(od.quantity) AS min_quantity,MAX(od.quantity) AS max_quantity
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
GROUP BY c.city;
--===========================================================================================================================================================================================
--Q16.For each product, which customer purchased the maximum quantity?
--===========================================================================================================================================================================================
SELECT o.customer_id,c.customer_name,maxquantity.product_id ,maxquantity.maxq FROM customers c
JOIN orders o
ON o.customer_id = c.customer_id
JOIN order_details od
ON od.order_id = o.order_id
JOIN ( SELECT od.product_id, MAX(od.quantity) as maxq FROM order_details od
JOIN orders o 
ON o.order_id= od.order_id
JOIN customers c
ON c.customer_id = o.customer_id
GROUP BY od.product_id ) as maxquantity ON maxquantity.product_id = od.product_id AND od.quantity = maxquantity.maxq
--===========================================================================================================================================================================================
--Q17.Show orders where the total order amount is greater than the average order amount across all orders.
--===========================================================================================================================================================================================
SELECT o.order_id , p.product_name ,o.total_amount ,  g.gt FROM orders o
JOIN order_details od 
ON od.order_id = o.order_id 
JOIN products p
ON p.product_id = od.product_id 
JOIN(
SELECT avg(total_amount)  as gt FROM orders) as g 
ON g.gt < o.total_amount;
--===========================================================================================================================================================================================
